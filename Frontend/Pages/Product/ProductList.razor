@page "/products"

@using Frontend.Services
@inject IProductService ProductService
@inject CartService CartService
@inject Frontend.Shared.CartState CartState
<style>
    /*
    .mud-card {
        flex-direction: initial !important;
        box-shadow: 12px 6px 20px rgba(0, 0, 0, 0.4);
    }

    .product-grid {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;  // espacio entre tarjetas 
        justify-content: space-between;
    }

    .product-card {
        width: calc(33.33% - 13.33px); // ✅ 3 tarjetas por fila con espacio 
        // box-shadow: 12px 6px 20px rgba(0, 0, 0, 0.4); ✅ Sombra bonita 
        display: flex; // ⚠️ Solo si quieres que el contenido esté en fila horizontal 
        max-height: 400px; // ✅ Altura máxima 
        overflow: hidden; // ✅ Oculta contenido que se desborde 
    }
    */
    .mud-elevation-1 {
        box-shadow: var(--mud-elevation-0);
    }

    .media-img {
        transition: transform .2s;
    }

    .media-img:hover {
        transform: scale(1.04);
        cursor: pointer;
    }

</style>
<script>
        window.scrollToTop = () => {
        window.scrollTo({ top: 0, behavior: 'smooth' });
    };
</script>
<h1 name="top"></h1>
@inject NavigationManager NavManager

<MudPaper Class="d-flex flex-row flex-grow-1 pl-5" >
    <MudPaper Style="margin-bottom: 10px;">
        <MudText Style="padding-left:5px; padding-bottom: 15px;margin-top: 20px;" Typo="Typo.h3">Catalog </MudText>
    </MudPaper>
     
    <MudSpacer />

    <MudPaper Style="margin-bottom: 10px;">
        <div class="pagination-settings" style="display: flex; justify-content: center; align-items: center; gap: 1rem; margin-top: 20px;">
            <MudText Typo="Typo.body1">Show:</MudText>
            <MudSelect T="int" Label="Qty. items"
                       Value="@pageSize"
                       ValueChanged="@(async (int newSize) => await OnPageSizeChanged(newSize))">
                @foreach (var size in pageSizeOptions)
                {
                    <MudSelectItem T="int" Value="@size">@size</MudSelectItem>
                }
            </MudSelect>
        </div>
        <MudPagination Color="Color.Primary"
                       Class="mt-4"
                       Count="@(numberOfPages)"
                       Selected="currentPage"
                       SelectedChanged="OnPageChanged" />

        <!--
            <div class="pagination-controls" style="margin-top: 20px; display: flex; justify-content: center;">
                <MudButton OnClick="@PreviousPage" Disabled="@((currentPage == 1))">Previous</MudButton>
                <MudText style="margin-top: 5px;" Class="mx-2" Typo="Typo.body1">Page @currentPage</MudText>
                <MudButton OnClick="@NextPage" Disabled="@(currentPage == 2)">Next</MudButton>
            </div>
        -->
    
    </MudPaper>
</MudPaper>

<MudDivider DividerType="DividerType.Middle" Class="my-6" />
@if (products != null && products.Length > 0)
{

    <MudPaper Class="flex-row-reverse pl-4">
        @foreach (var product in products)
        {

            <MudCard Elevation="4" 
                Outlined="true" 
                Class="d-inline-flex mr-5"
                Height="478px"
                MaxWidth="270px"
                MaxHeight="478px"
                Style="width: calc(33.33% - 13.33px); margin-left: 15px; margin-bottom: 60px;">
                <MudCardMedia @onclick='() => NavManager.NavigateTo($"/product/{product.Id}")'  Class="media-img" Image="@product.ImageUrls[0]" Height="300" />
                <MudCardContent>
                    <MudText @onclick='() => NavManager.NavigateTo($"/product/{product.Id}")' Typo="Typo.body2"><b>@product.Name</b></MudText>
                    <MudText Typo="Typo.h5">S @product.Price</MudText>
                    <MudText Typo="Typo.body2"><strong>Stock </strong>: @product.Stock</MudText>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Outlined" Color="Color.Primary">
                        <MudText Typo="Typo.button" @onclick="() => AddToCart(product)">Add to cart</MudText>
                    </MudButton>
                </MudCardActions>
            </MudCard>
        }
    </MudPaper>
    <div class="pagination-controls" style="margin-top: 20px; display: flex; justify-content: center;">
        <MudPagination Class="mb-8 mt-4" Color="Color.Primary"
                   Count="@(numberOfPages)"
                   Selected="currentPage"
                   SelectedChanged="OnPageChanged" />

    </div>
    <!--
     <div class="pagination-controls" style="margin-top: 20px; display: flex; justify-content: center;">
        <MudButton OnClick="@PreviousPage" Disabled="@((currentPage == 1))">Previous</MudButton>
        <MudText style="margin-top: 5px;" Class="mx-2" Typo="Typo.body1">Page @currentPage</MudText>
        <MudButton OnClick="@NextPage" Disabled="@(currentPage == 4)">Next</MudButton>
    </div>
    -->
} else {
    <Frontend.Shared.Loading />
}


